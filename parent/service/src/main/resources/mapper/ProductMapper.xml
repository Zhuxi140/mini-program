<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhuxi.mapper.ProductMapper">
    <select id="getListProducts"  resultType="src.main.java.com.zhuxi.pojo.VO.Product.ProductOverviewVO">
    <![CDATA[
        SELECT
            id,
            name,
            mini_price.price,
            cover_url
        FROM product
        JOIN
            (SELECT product_id,MIN(price) AS price FROM spec GROUP BY product_id) mini_price
        ON product.id = mini_price.product_id
        WHERE id < #{lastId} AND status = 1
        ORDER BY id DESC,created_at DESC
        LIMIT #{pageSize}
    ]]>
    </select>

    <select id="getListAdminProductsDESC" resultType="src.main.java.com.zhuxi.pojo.VO.Admin.AdminProductVO">
     <![CDATA[
        SELECT
            product.id,
            name,
            SUM(spec.stock) AS  stock,
            GROUP_CONCAT(DISTINCT spec.spec SEPARATOR'|') AS spec_names,
            CASE
                WHEN stock > 0 THEN '有货'
                WHEN stock = 0 THEN '无货'
                ELSE '库存不足'
            END AS stock_status
        FROM product JOIN spec ON product.id = spec.product_id
        WHERE product.id < #{lastId}
        GROUP BY product.id, product.name,stock_status
        ORDER BY product.id DESC
        LIMIT #{pageSize}
        ]]>
    </select>


    <select id="getListAdminProductsASC" resultType="src.main.java.com.zhuxi.pojo.VO.Admin.AdminProductVO">
        SELECT
            product.id,
            name,
            SUM(spec.stock) AS  stock,
            GROUP_CONCAT(DISTINCT spec.spec SEPARATOR'|') AS spec_names,
            CASE
                WHEN stock > 0 THEN '有货'
                WHEN stock = 0 THEN '无货'
                ELSE '库存不足'
                END AS stock_status
        FROM product JOIN spec ON product.id = spec.product_id
        WHERE product.id > #{lastId}
        GROUP BY product.id, product.name,stock_status
        ORDER BY product.id ASC
        LIMIT #{pageSize}
    </select>

    <insert id="addSpec">
    INSERT INTO spec(product_id,spec,price,stock)
    VALUES
        <foreach collection='list' item='spec' separator=','>
        (
            #{product_id},
            #{spec.spec},
            #{spec.price},
            #{spec.stock}
            )
        </foreach>
    </insert>

    <update id="updateProductBase">
        UPDATE product
        <set>
            <if test="productUpdateDTO.name != null">
                name = #{base.name},
            </if>
            <if test="productUpdateDTO.description != null">
                description = #{base.description},
            </if>
            <if test="productUpdateDTO.origin != null">
                origin = #{base.origin},
            </if>
            <if test="productUpdateDTO.status != null">
                status = #{base.status},
            </if>
        </set>
        WHERE id = #{base.id}
    </update>

    <update id="updateProductSpec">
        UPDATE spec
        <foreach collection="list" item="spec" >
            <set>
                <if test="list.name != null">
                    spec = #{spec.spec},
                </if>
                <if test="list.coverUrl != null">
                    cover_url = #{spec.coverUrl},
                </if>
                <if test="list.price != null">
                    price = #{spec.price},
                </if>
                <if test="list.stock != null">
                    stock = #{spec.stock},
                </if>
            </set>
        WHERE product_id = #{product_id}
        </foreach>

    </update>

    <update id="addBasePics">
        UPDATE product
        <set>
            <if test="coverUrl != null">
                cover_url = #{coverUrl},
            </if>
                <if test="images != null">
                    images = #{images},
                </if>
        </set>
        WHERE id = #{productId}
    </update>

</mapper>