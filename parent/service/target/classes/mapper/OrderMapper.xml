<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhuxi.mapper.OrderMapper">

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO `order`(order_sn,user_id, product_id, spec_id, address_id,product_quantity, total_amount,status)
        VALUES (
                #{orderSn},
                #{userId},
                #{productId},
                #{specId},
                #{addressId},
                #{productQuantity},
                #{totalAmount},
                #{status}
               )
    </insert>


    <insert id="insertOrderList">
        INSERT INTO
        `order`(order_sn,group_id,user_id, product_id, spec_id, address_id,product_quantity, total_amount,status)
        VALUES
            <foreach collection="orderAddDTO" item="item" separator=",">
                (
                #{item.orderSn},
                #{item.groupId},
                #{item.userId},
                #{item.productId},
                #{item.specId},
                #{item.addressId},
                #{item.productQuantity},
                #{item.totalAmount},
                #{item.status}
                )
            </foreach>
    </insert>

    <insert id="insertPaymentList">
        INSERT INTO payment(payment_sn,user_id, order_id, total_amount,status)
        VALUES
            <foreach collection="paymentAddDTO" item="item" separator=",">
                (
                #{item.paymentSn},
                #{item.userId},
                #{item.orderId},
                #{item.totalAmount},
                #{item.status}
                )
            </foreach>
    </insert>

    <insert id="insertInventoryLockList">
        INSERT INTO inventory_lock(product_id,order_id,spec_id,  quantity, status, expire_time)
        VALUES
            <foreach collection="inventoryLockAddDTOS" item="item" separator=",">
                (
                #{item.productId},
                #{item.orderId},
                #{item.specId},
                #{item.quantity},
                0,
                DATE_ADD(now(),INTERVAL 30 MINUTE)
                )
            </foreach>
    </insert>

    <select id="getProductRealStockList" resultType="java.lang.Integer">
        SELECT real_stock.stock FROM real_stock WHERE spec_id IN
        <foreach item="item" collection="specIds" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="getProductSaleStockList" resultType="java.lang.Integer">
        SELECT spec.stock FROM spec WHERE id IN
        <foreach item="item" collection="specIds" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="getProductPreStockList" resultType="java.lang.Integer">
        SELECT COALESCE(SUM(l.quantity),0),t.spec_id
        FROM
        (
           <foreach collection="specIds" item="specId" separator="UNION ALL">
               SELECT #{specId} AS spec_id
           </foreach>
        ) t
        LEFT JOIN inventory_lock l
        ON t.spec_id = l.spec_id
        AND l.status = 0
        AND l.expire_time > now()
        GROUP BY  t.spec_id
        ORDER BY FIELD(
             t.spec_id,
             <foreach collection="specIds" item="specId" separator=",">
                 #{specId}
             </foreach>
        )


    </select>
</mapper>